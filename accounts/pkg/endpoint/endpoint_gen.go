// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/terasurfer/AMSE_CPSC546_Cartelize/accounts/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	ListAdminsEndpoint      endpoint.Endpoint
	GetAdminEndpoint        endpoint.Endpoint
	GetAdminByEmailEndpoint endpoint.Endpoint
	CreateAdminEndpoint     endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AccountsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateAdminEndpoint:     MakeCreateAdminEndpoint(s),
		GetAdminByEmailEndpoint: MakeGetAdminByEmailEndpoint(s),
		GetAdminEndpoint:        MakeGetAdminEndpoint(s),
		ListAdminsEndpoint:      MakeListAdminsEndpoint(s),
	}
	for _, m := range mdw["ListAdmins"] {
		eps.ListAdminsEndpoint = m(eps.ListAdminsEndpoint)
	}
	for _, m := range mdw["GetAdmin"] {
		eps.GetAdminEndpoint = m(eps.GetAdminEndpoint)
	}
	for _, m := range mdw["GetAdminByEmail"] {
		eps.GetAdminByEmailEndpoint = m(eps.GetAdminByEmailEndpoint)
	}
	for _, m := range mdw["CreateAdmin"] {
		eps.CreateAdminEndpoint = m(eps.CreateAdminEndpoint)
	}
	return eps
}
